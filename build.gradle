plugins {
    id 'java'
    id 'jacoco'
    id 'org.jetbrains.kotlin.jvm' version '1.4.31'
}

group 'vjson'
version loadVersion()

sourceCompatibility = 1.8
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.9.3'
    testCompile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    testCompile group: 'com.alibaba', name: 'fastjson', version: '1.2.59'
    testCompile group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: '1.21'
}

test {
    include '**/Suite.class'
}

jacocoTestReport {
    dependsOn test
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ['-Xjvm-default=enable']
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

def loadVersion() {
    def PREFIX = "const val VERSION = \""
    def SUFFIX = "\" // _THE_VERSION_"
    def ver = file(sourceSets.main.kotlin.srcDirs[0].path + "/vjson/util/VERSION.kt")
    def lines = ver.getText().split("\n")
    for (def line : lines) {
        line = line.trim()
        if (line.startsWith(PREFIX) && line.endsWith(SUFFIX)) {
            return line.substring(PREFIX.length(), line.length() - SUFFIX.length())
        }
    }
    return "unknown"
}
